#version: "3.9"

services:
  redis:
    container_name: redis
    image: redis:7.0.5-alpine
    command:
      - 'redis-server'
      - '--databases 2'
      - '--save 900 1'
      - '--save 300 10'
      - '--save 60 10000'
      - '--maxmemory 2gb'
      - '--maxmemory-policy allkeys-lru'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      loki:
        aliases:
          - redis

  loki:
    image: grafana/loki:2.3.0
    depends_on:
      cassandra:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - /etc/docker-compose/local-config.yaml:/etc/loki/local-config.yaml
      - loki:/loki
    ports:
      - "3100:3100"
    restart: always
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/metrics"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      loki:
        aliases:
          - loki

  cassandra:
    image: bitnami/cassandra:3.11.11
    volumes:
      - cassandra:/bitnami
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 10s
      timeout: 10s
      retries: 10
    environment:
      CASSANDRA_USER: cassandra
      CASSANDRA_PASSWORD: cassandra
      CASSANDRA_CLUSTER_NAME: loki
      CASSANDRA_DATACENTER: dc1
    networks:
      loki:
        aliases:
          - cassandra

  log-generator:
    image: mingrammer/flog
    command:
      - --loop
      - --format=json
      - --number=10
      - --delay=100ms
      - --output=/var/log/generated-logs.txt
      - --overwrite
      - --type=log
    depends_on:
      promtail:
        condition: service_started
    volumes:
      - ./loki/:/var/log/

  promtail:
    image: grafana/promtail:2.6.1
    volumes:
      - ./loki/:/var/log/
      - ./config/promtail-old.yaml:/etc/promtail/promtail.yaml
    ports:
      - "9080:9080"
    command: -config.file=/etc/promtail/promtail.yaml
    depends_on:
      loki:
        condition: service_started
    networks:
      loki:
        aliases:
          - promtail

  grafana:
    image: grafana/grafana:9.1.6
    ports:
      - "3000:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - loki

volumes:
  cassandra:
  loki:
  redis_data:
  grafana:

networks:
  loki:
    driver: bridge